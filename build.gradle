import proguard.gradle.ProGuardTask

apply plugin: 'scala'
apply plugin: "maven-publish"

group = "org.asoem"
version = "1.2.4"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.10.2'
    testCompile 'org.scalatest:scalatest_2.10:1.9.1', "junit:junit:4.11"
}

compileScala {
    compileScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6 -feature']
}

compileTestScala {
    compileTestScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6']
}

test << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') {
        reporter(type: 'stderr')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:4.9'
    }
}

task proguard(type: ProGuardTask) {
    dependsOn jar

    ext {
        outDir = file("${buildDir}/proguard")
        destFile = "${outDir}/${jar.baseName}-${jar.version}.proguard.${jar.extension}"
    }
    outDir.mkdirs()

    injars jar.archivePath
    configurations.runtime.each { file ->
        injars file.path, filter: '!META-INF/MANIFEST.MF'
    }
    outjars ext.destFile
    //libraryjars Os.isFamily(Os.FAMILY_MAC) ? '<java.home>/../Classes/classes.jar' : '<java.home>/lib/rt.jar'
    libraryjars '<java.home>/lib/rt.jar'

    configuration 'proguard.conf'

    doLast {
        logger.lifecycle "[Proguard] Generated processed JAR in ${destFile}"
    }
}

task proguardJar(type: Jar) {
    dependsOn proguard
    from file(proguard.destFile)
}

artifacts {
    archives proguardJar
}

/* In Gradle 1.6 it is not possible to change the artifactId. Maybe in future versions: https://github.com/gradle/gradle/blob/master/design-docs/publication-model.md#customising-maven-descriptor-xml
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
        maven(MavenPublication) {
            artifact proguardJar
            pom.withXml {
                asNode().artifactId[0].value = 'kdtree-scala'
                def nodeToDel = asNode().dependencies.dependency.find {
                    it.groupId.text() == 'org.scala-lang' && it.artifactId.text() == 'scala-library'
                }
                if (nodeToDel != null) {
                    def parent = nodeToDel.parent()
                    parent.remove(nodeToDel)
                }
                else
                    logger.warn "Couldn't delete dependency org.scala-lang:scala-library"
            }
        }
    }
}
*/